import os
import subprocess

# Dictionnaire global pour stocker le nombre de détections de chaque type de packer
top_packers = [
    'UPX', 'ASPack', 'PECompact', 'NSPack', 'FSG', 'RLPack',
    'Morphine', 'ExeCryptor', 'Yoda', 'MEW', 'PEtite', 'Telock',
    'MewPack', 'ASProtect', 'Enigma', 'VMProtect', 'Obsidium',
    'Themida', 'Armadillo', 'ACProtect'
]

# Initialiser le dictionnaire de comptage
packer_counts = {packer: 0 for packer in top_packers}

def display_packer_counts(counts):
    for packer, count in counts.items():
        print(f"[{packer}] : Trouvé {count} fois")

def identify_packer(file_path):
    try:
        # Chemin vers l'exécutable PEiD
        peid_file = 'C:\\Users\\cocol\\.pyenv\\pyenv-win\\shims\\peid.bat'
        
        # Exécute la commande PEiD en mode avancé pour identifier le packer
        result = subprocess.run([peid_file, file_path], capture_output=True, text=True, check=True)

        # Vérifie si l'un des packers est présent dans la sortie
        for packer in top_packers:
            if packer.upper() in result.stdout.upper():
                print(f"{packer} Found!")
                return packer

    except subprocess.CalledProcessError as e:
        # En cas d'erreur, affiche le message d'erreur
        print(f"Erreur lors de l'identification du packer : {e.stderr} de chemin {file_path}")

    return None

def process_directory(directory_path, output_folder):
    # Crée un sous-dossier pour les images
    os.makedirs(output_folder, exist_ok=True)

    # Liste tous les fichiers du répertoire
    for filename in os.listdir(directory_path):
        # Vérifie si le fichier est de type exe
        if filename.endswith(".exe"):
            # Extrait le numéro du fichier exe (suppose que le numéro est le premier groupe de chiffres dans le nom de fichier)
            file_number = ''.join(filter(str.isdigit, filename))

            # Chemin complet du fichier
            input_file_path = os.path.join(directory_path, filename)

            try:
                # Appel de la fonction identify_packer
                packer_type = identify_packer(input_file_path)

                # Utilisez le résultat comme nécessaire dans votre programme
                if packer_type is not None:
                    # Mettre à jour le dictionnaire de comptage
                    packer_counts[packer_type] += 1
                    
                identify_packer(input_file_path)

            except FileNotFoundError:
                print(f"Le fichier {input_file_path} n'existe pas.")

# Appel de la fonction pour chaque répertoire
process_directory('C:\\Users\\cocol\\Documents\\HEH2023\\MachineLearning\\Projet\\heh-cybersecurity-2023-2024\\trainset\\trainset\\safe', 'C:\\Users\\cocol\\Documents\\HEH2023\\MachineLearning\\Projet\\OpenFileIntoGrayScale\\output_images_safe')
process_directory('C:\\Users\\cocol\\Documents\\HEH2023\\MachineLearning\\Projet\\heh-cybersecurity-2023-2024\\trainset\\trainset\\malware', 'C:\\Users\\cocol\\Documents\\HEH2023\\MachineLearning\\Projet\\OpenFileIntoGrayScale\\output_images_malware')
# Utilisation de la fonction pour afficher le récapitulatif
display_packer_counts(packer_counts)