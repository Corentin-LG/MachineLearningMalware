import os
import numpy as np
from math import sqrt, ceil
import cv2
import subprocess

# Dictionnaire global pour stocker le nombre de détections de chaque type de packer
top_packers = [
    'UPX', 'ASPack', 'PECompact', 'NSPack', 'FSG', 'RLPack',
    'Morphine', 'ExeCryptor', 'Yoda', 'MEW', 'PEtite', 'Telock',
    'MewPack', 'ASProtect', 'Enigma', 'VMProtect', 'Obsidium',
    'Themida', 'Armadillo', 'ACProtect'
]

packer_counts = {packer: 0 for packer in top_packers}

def identify_packer(file_path):
    try:
        # Chemin vers l'exécutable PEiD
        peid_file = 'C:\\Users\\cocol\\Documents\\HEH2023\\MachineLearning\\Projet\\app-peid\\PEiD.exe'

        # Configuration pour démarrer le processus sans fenêtre
        startupinfo = subprocess.STARTUPINFO()
        startupinfo.dwFlags |= subprocess.STARTF_USESHOWWINDOW

        # Exécute la commande PEiD en mode avancé pour identifier le packer
        result = subprocess.run([peid_file, file_path], capture_output=True, text=True, check=True, startupinfo=startupinfo)

        # Vérifie si l'un des packers est présent dans la sortie
        for packer in top_packers:
            if packer.upper() in result.stdout.upper():
                print(f"{packer} Found!")
                return packer

    except subprocess.CalledProcessError as e:
        # En cas d'erreur, affiche le message d'erreur
        print(f"Erreur lors de l'identification du packer : {e.stderr} de chemin {file_path}")

    return None

def process_directory(directory_path):
    # Liste tous les fichiers du répertoire
    for filename in os.listdir(directory_path):
        # Vérifie si le fichier est de type exe
        if filename.endswith(".exe"):
            # Extrait le numéro du fichier exe (suppose que le numéro est le premier groupe de chiffres dans le nom de fichier)
            file_number = ''.join(filter(str.isdigit, filename))

            # Chemin complet du fichier
            input_file_path = os.path.join(directory_path, filename)

            # Lire le fichier binaire
            with open(input_file_path, 'rb') as binary_file:
                data = binary_file.read()

            # Identifie le packer et met à jour le dictionnaire global des comptes
            packer_type = identify_packer(input_file_path)
            if packer_type is not None:
                packer_counts[packer_type] += 1

            print(f"Image enregistrée : {filename}.exe")

# Appel de la fonction pour chaque répertoire
process_directory('C:\\Users\\cocol\\Documents\\HEH2023\\MachineLearning\\Projet\\heh-cybersecurity-2023-2024\\trainset\\trainset\\malware')

# Affiche le tableau récapitulatif
print("Récapitulatif des détections de packer :")
for packer, count in packer_counts.items():
    print(f"{packer}: {count} fois")
